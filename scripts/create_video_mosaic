#! /bin/bash


DATASET_ROOT=/media/$USER/DoRoThy1/freeplay_sandbox/data

# the final mosaic will be made of size X size videos
# can be overriden from the command line, for instance:
# $ SIZE=5 ./create_video_mosaic
: ${SIZE:=7}

paths=($DATASET_ROOT/2017**/videos/camera_purple.mkv)
paths+=($DATASET_ROOT/2017**/videos/camera_yellow.mkv)
paths=( $(shuf -e "${paths[@]}") ) # randomize the order of the videos

args_raw=()
args_raw_skel=()
args_skel=()
ffmpeg_filter=""


for ((i=0;i<$SIZE*$SIZE;i++))
do
    f=${paths[$i]}
    
    dir=$(dirname $f)
    base=$(basename $f .mkv)

    args_raw[$i]=" -i $dir/${base}_raw.mkv"
    args_raw_skel[$i]=" -i $dir/${base}.mkv"
    args_skel[$i]=" -i $dir/${base}_skel.mkv"
    ffmpeg_filter+="[$i:v] setpts=PTS-STARTPTS, trim=duration=60:start=30 [v$i];"
done

vstreams=""
for ((i=0;i<$SIZE;i++))
do
    hstreams=""
    for ((j=$i*$SIZE;j<($i+1)*$SIZE;j++))
    do
        hstreams+="[v$j]"
    done
    ffmpeg_filter+="$hstreams hstack=$SIZE [h$i];"
    vstreams+="[h$i]"
done

ffmpeg_filter+="$vstreams vstack=$SIZE [prezoom];"


ffmpeg ${args_raw[@]} \
    -filter_complex "
        $ffmpeg_filter
        [prezoom] zoompan=z='if(lte(in,200),$SIZE,if(lte(pzoom,1.0),$SIZE,max(1.001,pzoom * 0.994)))':x=trunc(iw/2-iw/pzoom/2):y=trunc(ih/2-ih/pzoom/2):d=1:s=960x540
    " \
    -c:v libx264 mosaic_raw.mkv

ffmpeg ${args_raw_skel[@]} \
    -filter_complex "
        $ffmpeg_filter
        [prezoom] zoompan=z='if(lte(in,200),$SIZE,if(lte(pzoom,1.0),$SIZE,max(1.001,pzoom * 0.994)))':x=trunc(iw/2-iw/pzoom/2):y=trunc(ih/2-ih/pzoom/2):d=1:s=960x540
    " \
    -c:v libx264 mosaic_raw_skel.mkv

ffmpeg ${args_skel[@]} \
    -filter_complex "
        $ffmpeg_filter
        [prezoom] zoompan=z='if(lte(in,200),$SIZE,if(lte(pzoom,1.0),$SIZE,max(1.001,pzoom * 0.994)))':x=trunc(iw/2-iw/pzoom/2):y=trunc(ih/2-ih/pzoom/2):d=1:s=960x540
    " \
    -c:v libx264 mosaic_skel.mkv
